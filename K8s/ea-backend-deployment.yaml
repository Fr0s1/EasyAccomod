apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\dthie\kompose\kompose.exe -f docker-compose-local.yml convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: ea-backend
  name: ea-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ea-backend
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\dthie\kompose\kompose.exe -f docker-compose-local.yml
          convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/ea-network: "true"
        io.kompose.service: ea-backend
    spec:
      containers:
      - args:
        - npm
        - run
        - server
        env:
        - name: MYSQL_DB
          value: easyaccomod
        - name: MYSQL_HOST
          value: ea-db
        - name: MYSQL_PASSWORD
          value: hieu2203
        - name: MYSQL_USER
          value: root
        image: frost2203/ea-backend:local
        imagePullPolicy: ""
        name: ea-backend
        livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 10
            timeoutSeconds: 1
        ports:
        - containerPort: 8081
        resources: {}
        volumeMounts:
        - mountPath: /nodejsserver/roomImages
          name: backend-room-images
        workingDir: /nodejsserver
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: backend-room-images
        persistentVolumeClaim:
          claimName: backend-room-images
status: {}
